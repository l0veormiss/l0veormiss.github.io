-technique 			 拓展：sql注入工具sqlmap使用参数说明
>按参数选项分类
->>>>>>>>>>>> Options（选项）:
--version 			 显示程序的版本号并退出
-h, --help 			 显示此帮助消息并退出
-v VERBOSE 			 详细级别：0-6（默认为1）

->>>>>>>>>  target（目标）：以下至少需要设置其中一个选项，设置目标URL:
-d DIRECT  			 直接连接到数据库。
-u URL, --url=URL 	 目标URL。
-l LIST  			 从Burp或WebScarab代理的日志中解析目标。
-r REQUESTFILE  	       从一个文件中载入HTTP请求。
-g GOOGLEDORK 		 处理Google dork的结果作为目标URL。
-c CONFIGFILE 		 从INI配置文件中加载选项。

->>>>>>>>>>	Request（请求）：:这些选项可以用来指定如何连接到目标URL:
--data=DATA 		 通过POST发送的数据字符串
--cookie=COOKIE HTTP     Cookie头
--cookie-urlencode 	 URL编码生成的cookie注入
--drop-set-cookie 	 忽略响应的Set - Cookie头信息
--user-agent=AGENT 	 指定 HTTP User - Agent头
--random-agent 		 使用随机选定的HTTP User - Agent头
--referer=REFERER 	 指定 HTTP Referer头
--headers=HEADERS 	 换行分开，加入其他的HTTP头
--auth-type=ATYPE 	 HTTP身份验证类型（基本，摘要或NTLM）(Basic, Digest or NTLM)
--auth-cred=ACRED 	 HTTP身份验证凭据（用户名:密码）
--auth-cert=ACERT 	 HTTP认证证书（key_file，cert_file）
--proxy=PROXY 		 使用HTTP代理连接到目标URL
--proxy-cred=PCRED 	 HTTP代理身份验证凭据（用户名：密码）
--ignore-proxy 		 忽略系统默认的HTTP代理
--delay=DELAY 		 在每个HTTP请求之间的延迟时间，单位为秒
--timeout=TIMEOUT 	 等待连接超时的时间（默认为30秒）
--retries=RETRIES 	 连接超时后重新连接的时间（默认3）
--scope=SCOPE 		 从所提供的代理日志中过滤器目标的正则表达式
--safe-url=SAFURL 	 在测试过程中经常访问的url地址
--safe-freq=SAFREQ 	 两次访问之间测试请求，给出安全的URL

->>>>>>>>>>	 Optimization（优化）：这些选项可用于优化SqlMap的性能:
-o 					开启所有优化开关
--predict-output 	       预测常见的查询输出
--keep-alive 		 使用持久的HTTP（S）连接
--null-connection 	 从没有实际的HTTP响应体中检索页面长度
--threads=THREADS 	 最大的HTTP（S）请求并发量（默认为1）

->>>>>>>>>>> Injection（注入）：这些选项可以用来指定测试哪些参数， 提供自定义的注入payloads和:
      可选篡改脚本:
-p TESTPARAMETER 	       可测试的参数（S）
--dbms=DBMS 		 强制后端的DBMS为此值
--os=OS 			 强制后端的DBMS操作系统为这个值
--prefix=PREFIX 	       注入payload字符串前缀
--suffix=SUFFIX 	       注入payload字符串后缀
--tamper=TAMPER 	       使用给定的脚本（S）篡改注入数据

->>>>>>>>>>> Detection（检测）:
      这些选项可以用来指定在SQL盲注时如何解析和比较HTTP响应页面的内容:
--level=LEVEL            执行测试的等级（1-5，默认为1）
--risk=RISK 		 执行测试的风险（0-3，默认为1）
--string=STRING 	       查询时有效时在页面匹配字符串
--regexp=REGEXP 	       查询时有效时在页面匹配正则表达式
--text-only 		 仅基于在文本内容比较网页

->>>>>>>>>> Techniques（技巧）：这些选项可用于调整具体的SQL注入测试:
--technique=TECH 	       SQL注入技术测试（默认BEUST）
--time-sec=TIMESEC 	 DBMS响应的延迟时间（默认为5秒）
--union-cols=UCOLS 	 定列范围用于测试UNION查询注入
--union-char=UCHAR 	 用于暴力猜解列数的字符

->>>>>>>>>>> Fingerprint（指纹）:
-f, --fingerprint 	执行检查广泛的DBMS版本指纹

->>>>>>>>>>> Enumeration（枚举）：这些选项可以用来列举后端数据库管理系统的信息、表中的结构和数据:
      此外，您还可以运行您自己的SQL语句:
-b, --banner 		 检索数据库管理系统的标识
--current-user 		 检索数据库管理系统当前用户
--current-db 		 检索数据库管理系统当前数据库
--is-dba 			 检测DBMS当前用户是否DBA
--users 			 枚举数据库管理系统用户
--passwords 		 枚举数据库管理系统用户密码哈希
--privileges 		 枚举数据库管理系统用户的权限
--roles 			 枚举数据库管理系统用户的角色
--dbs 		       枚举数据库管理系统数据库
--tables 			 枚举的DBMS数据库中的表
--columns 			 枚举DBMS数据库表列
--dump 			 转储数据库管理系统的数据库中的表项
--dump-all 			 转储所有的DBMS数据库表中的条目
--search 			 搜索列（S），表（S）和/或数据库名称（S）
-D DB 			 指定数据库名
-T TBL 			 指定数据库表
-C COL 			 指定数据库列
-U USER 			 指定数据库用户
--exclude-sysdbs 	       枚举表时排除系统数据库
--start=LIMITSTART 	 第一个查询输出进入检索
--stop=LIMITSTOP 	       最后查询的输出进入检索
--first=FIRSTCHAR 	 第一个查询输出字的字符检索
--last=LASTCHAR 	       最后查询的输出字字符检索
--sql-query=QUERY 	 要执行的SQL语句
--sql-shell 		 提示交互式SQL的shell

->>>>>>>>>>> Brute force（蛮力）：这些选项可以被用来运行蛮力检查:
--common-tables 	       检查存在共同表
--common-columns 	       检查存在共同列

->>>>>>>>>>> User-defined force（蛮力）：这些选项可以被用来运行蛮力检查:
      unction injection（用户自定义函数注入）：这些选项可以用来创建用户自定义函数:
--udf-inject 		 注入用户自定义函数
--shared-lib=SHLIB 	 共享库的本地路径

->>>>>>>>>>>> File system access（访问文件系统）：这些选项可以被用来访问后端数据:
      库管理系统的底层文件系统:
--file-read=RFILE 	 从后端的数据库管理系统文件系统读取文件
--file-write=WFILE 	 编辑后端的数据库管理系统文件系统上的本地文件
--file-dest=DFILE  	 后端的数据库管理系统写入文件的绝对路径

->>>>>>>>>>>> Operating system access（操作系统访问）：这些选项可以用于访问后端数据:
      库管理系统的底层操作系统:
--os-cmd=OSCMD 		 执行操作系统命令
--os-shell 			 交互式的操作系统的shell
--os-pwn 			 获取一个OOB shell，meterpreter或VNC
--os-smbrelay 		 一键获取一个OOB shell，meterpreter或VNC
--os-bof 			 存储过程缓冲区溢出利用
--priv-esc 			 数据库进程用户权限提升
--msf-path=MSFPATH 	 Metasploit Framework本地的安装路径
--tmp-path=TMPPATH 	 远程临时文件目录的绝对路径

->>>>>>>>>>>> Windows注册表访问：这些选项可以被用来访问后端数据库管理系统Windows注册表:
--reg-read 			 读一个Windows注册表项值
--reg-add 			 写一个Windows注册表项值数据
--reg-del 			 删除Windows注册表键值
--reg-key=REGKEY 	       Windows注册表键
--reg-value=REGVAL 	 Windows注册表项值
--reg-data=REGDATA 	 Windows注册表键值数据
--reg-type=REGTYPE 	 Windows注册表项值类型

->>>>>>>>>>>>> General（一般）：这些选项可以用来设置一些一般的工作参数:
-t TRAFFICFILE 		 记录所有HTTP流量到一个文本文件中
-s SESSIONFILE 		 保存和恢复检索会话文件的所有数据
--flush-session 	       刷新当前目标的会话文件
--fresh-queries 	       忽略在会话文件中存储的查询结果
--eta 		       显示每个输出的预计到达时间
--update 			 更新SqlMap
--save 		       file保存选项到INI配置文件
--batch 			 从不询问用户输入，使用所有默认配置。

->>>>>>>>>>>> Miscellaneous（杂项）:
--beep 			 发现SQL注入时提醒
--check-payload 	       IDS对注入payloads的检测测试
--cleanup 			 SqlMap具体的UDF和表清理DBMS
--forms 			 对目标URL的解析和测试形式
--gpage=GOOGLEPAGE 	 从指定的页码使用谷歌dork结果
--page-rank 		 Google dork结果显示网页排名（PR）
--parse-errors 		 从响应页面解析数据库管理系统的错误消息
--replicate 		 复制转储的数据到一个sqlite3数据库
--tor 			 使用默认的Tor（Vidalia/ Privoxy
-u URL，-url = URL       目标URL（例如“ http://www.site.com/vuln.php?id=1”）
-r "target.txt"          里面存放一个抓包的请求 sqlmap.py -r "target.txt"


>按使用功能分类
请求:
这些选项可用于指定如何连接到目标URL:
--data = DATA 		要通过POST发送的数据字符串（例如“ id = 1”）
--cookie = COOKIE 	HTTP Cookie标头值（例如“ PHPSESSID = a8d127e ..”）
--random-agent 		使用随机选择的HTTP User-Agent标头值
--proxy = PROXY 	      使用代理连接到目标URL


注射:
这些选项可用于指定要测试的参数:
提供自定义注入有效载荷和可选的篡改脚本:
-p TESTPARAMETER 	      指定测试的参数，不会测试其他的
--dbms = DBMS 		强制将后端DBMS设置为提供的值

检测:
这些选项可用于自定义检测阶段:
--level = LEVEL 	 	要执行的测试级别（1-5，默认为1）
--risk = 1 			风险执行测试的风险（1-3，默认值为1）

技术:
这些选项可用于调整特定SQL注入的测试:
--technique = TECH ..	要使用的SQL注入技术（默认为“ BEUSTQ”）

枚举:
这些选项可用于枚举后端数据库:
管理系统中包含的信息，结构和数据:
-a，--all 			检索所有内容
-b，-banner 		      检索DBMS标语
--current-user 		检索DBMS当前用户
--current-db 		检索DBMS当前数据库
--passwords  		枚举DBMS用户密码哈希
--dbs                   枚举数据库     
--tables 			枚举DBMS数据库表
--columns 		      枚举DBMS数据库表列
--schema 			枚举DBMS模式
--dump 			转储DBMS数据库表条目
--dump-all 		      转储所有DBMS数据库表条目
-D 指定数据库 		数据库枚举
-T 指定表 			DBMS数据库表
-C 指定字段 		      DBMS枚举的数据库表列



-u URL，-url = URL 	目标URL（例如“ http://www.site.com/vuln.php?id=1”）
-d DIRECT			连接字符串，用于直接数据库连接
-l LOGFILE 		      从Burp或WebScarab代理日志文件中解析目标
-m BULKFILE 		扫描文本文件中给定的多个目标
-r REQUESTFILE 		从文件加载HTTP请求
-g GOOGLEDORK 		将Google dork结果作为目标URL处理
-c CONFIGFILE 		从配置INI文件中加载选项

请求:
这些选项可用于指定如何连接到目标URL:
-A AGENT，--user 		HTTP User-Agent标头值
-H HEADER，--hea     	额外的标题（例如“ X-Forwarded-For：127.0.0.1”）
--method = METHOD 	强制使用给定的HTTP方法（例如PUT）
--data = DATA 		要通过POST发送的数据字符串（例如“ id = 1”）
--param-del = PARA  	用于分割参数值的字符（例如＆）
--cookie = COOKIE   	HTTP Cookie标头值（例如“ PHPSESSID = a8d127e ..”）
--cookie-del = COO  	用于分割Cookie值的字符（例如；）
--load-cookies = L  	包含Netscape / wget格式的cookie的文件
--drop-set-cookie   	从响应中忽略Set-Cookie标头
--mobile            	通过HTTP User-Agent标头模仿智能手机
--random-agent      	使用随机选择的HTTP User-Agent标头值
--host = HOST       	HTTP主机头值
--referer = REFERER 	HTTP引用标头值
--headers = HEADERS 	额外的标题（例如“ Accept-Language：fr \ nETag：123”）
--auth-type = AUTH  	HTTP身份验证类型（基本，摘要，NTLM或PKI）
--auth-cred = AUTH  	HTTP身份验证凭据（名称：密码）
--auth-file = AUTH  	HTTP认证PEM证书/私钥文件
--ignore-code = IG  	忽略（有问题的）HTTP错误代码（例如401）
--ignore-proxy 		忽略系统默认代理设置
--ignore-redirects  	忽略重定向尝试
--ignore-timeouts   	忽略连接超时
--ignore-401		忽略HTTP401错误
--proxy = PROXY     	使用代理连接到目标URL
--proxy-cred = PRO  	代理身份验证凭据（名称：密码）
--proxy-file = PRO。 	从文件加载代理列表
--tor-port = TORPORT  	设置默认值以外的Tor代理端口
--tor-type = TORTYPE 	设置Tor代理类型（HTTP，SOCKS4或SOCKS5（默认））
--check-tor 		检查Tor是否正确使用
--delay = DELAY 		每个HTTP请求之间的延迟秒数
--timeout = TIMEOUT 	超时连接之前等待的秒数（默认为30）
--retries = RETRIES 	连接超时时重试（默认3）
--randomize = RPARAM	随机更改给定参数的值
--safe-url = SAFEURL 	测试期间要经常访问的URL地址
--safe-post =安全   	POST数据发送到安全URL
--safe-req = SAFER  	从文件加载安全的HTTP请求
--safe-freq = SAFE  	两次访问安全网址之间的常规请求
--skip-urlencode    	跳过有效载荷数据的URL编码
--csrf-token = CSR  	用于保存反CSRF令牌的参数
--csrf-url = CSRFURL  	用来提取反CSRF令牌的URL地址
--csrf-method = CS  	在反CSRF令牌页面访问期间使用的HTTP方法
--csrf-retries = C  	重试用于反CSRF令牌检索（默认0）
--force-ssl 		强制使用SSL / HTTPS
--chunked 		      使用HTTP分块传输编码（POST）请求
--hpp 			使用HTTP参数污染方法
--eval = EVALCODE 	在请求之前评估提供的Python代码（例如
      “导入hashlib; id2 = hashlib.md5（id）.hexdigest（）”）

优化:
这些选项可用于优化sqlmap的性能:
-o                      打开所有优化开关
--predict-output 		预测常见查询输出
--keep-alive		使用持久HTTP连接
--null-connection 	检索没有实际HTTP响应正文的页面长度
--threads = THREADS 	最大并发HTTP请求数（默认为1）

注射:
这些选项可用于指定要测试的参数:
提供自定义注入有效载荷和可选的篡改脚本:
-p TESTPARAMETER 		指定测试的参数，不会测试其他的参数
--skip = SKIP  		跳过给定参数的测试
--skip-static 		跳过似乎不是动态的测试参数
--param-exclude =   	正则表达式可从测试中排除参数（例如“ ses”）
--param-filter = P  	按位置选择可测试的参数（例如“ POST”）
--dbms = DBMS 		强制将后端DBMS设置为提供的值
--dbms-cred = DBMS  	DBMS身份验证凭据（用户：密码）
--os = OS  		      强制后端DBMS操作系统提供值
--invalid-bignum 		使用大数字来使值无效
--invalid-logical   	使用逻辑运算来使值无效
--invalid-string    	使用随机字符串使值无效


操作系统访问:
这些选项可用于访问后端数据库管理系统底层操作系统:
-h，--help		      显示基本帮助消息并退出
-hh 			      显示高级帮助消息并退出
--version		      显示程序的版本号并退出
-v VERBOSE		      详细级别：0-6（默认1）
-g 		            GOOGLEDORK将Google dork结果作为目标URL处理
--tor  			使用Tor匿名网络
--check-tor 		检查Tor是否正确使用

--os-shell  		提示输入交互式操作系统外壳
--os-pwn 			提示输入OOB shell，Meterpreter或VNC

一般:
这些选项可用于设置一些常规工作参数:
--batch  			从不要求用户输入，请使用默认行为
--flush-session  	      刷新当前目标的会话文件

杂:
这些选项不属于任何其他类别:
--sqlmap-shell 		提示输入交互式sqlmap shell
--wizard 			面向初学者的简单向导界面

