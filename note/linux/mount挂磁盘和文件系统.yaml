mount挂载一个文件系统:
#挂载一个叫做hda2的盘 - 确定目录 '/ mnt/hda2' 已经存在
mount /dev/hda2 /mnt/hda2

#卸载一个叫做hda2的盘 - 先从挂载点 '/ mnt/hda2' 退出 
umount /dev/hda2

#当设备繁忙时强制卸载
fuser -km /mnt/hda2

#运行卸载操作而不写入 /etc/mtab 文件- 当文件为只读或当磁盘写满时非常有用  
umount -n /mnt/hda2

#挂载一个软盘
mount /dev/fd0 /mnt/floppy

#挂载一个cdrom或dvdrom 
mount /dev/cdrom /mnt/cdrom

#挂载一个cdrw或dvdrom
mount /dev/hdc /mnt/cdrecorder

#挂载一个cdrw或dvdrom 
mount /dev/hdb /mnt/cdrecorder

#挂载一个文件或ISO镜像文件 
mount -o loop file.iso /mnt/cdrom

#挂载一个Windows FAT32文件系统
mount -t vfat /dev/hda5 /mnt/hda5

#挂载一个usb 捷盘或闪存设备  
mount /dev/sda1 /mnt/usbdisk

#WinClient/share /mnt/share 挂载一个windows网络共享 
mount -t smbfs -o username=user,password=pass  


磁盘空间:
#显示已经挂载的分区列表
df -h

#以尺寸大小排列文件和目录
ls -lSr |more

#估算目录 'dir1' 已经使用的磁盘空间'
du -sh dir1

#以容量大小为依据依次显示文件和目录的大小
du -sk * | sort -rn

#以大小为依据依次显示已安装的rpm包所使用的空间 (fedora, redhat类系统) 
rpm -q -a --qf '%10{SIZE}t%{NAME}n' | sort -k1,1n

#以大小为依据显示已安装的deb包所使用的空间 (ubuntu, debian类系统) 
dpkg-query -W -f='${Installed-Size;10}t${Package}n' | sort -k1,1n 


文件系统分析:
badblocks -v /dev/hda1        检查磁盘hda1上的坏磁块 
fsck /dev/hda1                修复/检查hda1磁盘上linux文件系统的完整性 
fsck.ext2 /dev/hda1           修复/检查hda1磁盘上ext2文件系统的完整性 
e2fsck /dev/hda1              修复/检查hda1磁盘上ext2文件系统的完整性 
e2fsck -j /dev/hda1           修复/检查hda1磁盘上ext3文件系统的完整性 
fsck.ext3 /dev/hda1           修复/检查hda1磁盘上ext3文件系统的完整性 
fsck.vfat /dev/hda1           修复/检查hda1磁盘上fat文件系统的完整性 
fsck.msdos /dev/hda1          修复/检查hda1磁盘上dos文件系统的完整性 
dosfsck /dev/hda1             修复/检查hda1磁盘上dos文件系统的完整性 



初始化一个文件系统:
mkfs /dev/hda1                在hda1分区创建一个文件系统 
mke2fs /dev/hda1              在hda1分区创建一个linux ext2的文件系统 
mke2fs -j /dev/hda1           在hda1分区创建一个linux ext3(日志型)的文件系统 
mkfs -t vfat 32 -F /dev/hda1  创建一个 FAT32 文件系统 
fdformat -n /dev/fd0          格式化一个软盘 
mkswap /dev/hda3              创建一个swap文件系统 



SWAP文件系统:
mkswap /dev/hda3              创建一个swap文件系统 
swapon /dev/hda3              启用一个新的swap文件系统 
swapon /dev/hda2 /dev/hdb3    启用两个swap分区