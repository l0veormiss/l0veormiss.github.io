参数选项:
    --color=auto    对匹配到的内容着色显示
    -v      显示没有被匹配到的行
    -i      忽略字符大小写
    -n      显示匹配到的行号
    -c      统计匹配到的行数
    -o      只显示匹配到的字符串
    -q      静默模式
    -A #    匹配后#行
    -B #    匹配前#行
    -C #    匹配前后各#行
    -E      使用扩展正则表达式   grep -e 'abc' -e 'def' FILENAME
    -P      使用Perl正则表达式
    -e      多个选项间的或关系
    -w      匹配整行文本


使用实例:
#显示所有包含root的行
grep root /etc/passwd

#显示所有不包含root的行，参数-v，意思是取反
grep -v root /etc/passwd

#忽略字符大小，参数-i
grep -i ROOT /etc/passwd

#显示匹配到的行号，参数-n
grep -n root /etc/passwd

#显示匹配到的行数，参数-c
grep -c root /etc/passwd

#只显示匹配到的字符串，参数-o
grep -o root /etc/passwd

#静默模式，参数-q
grep -q root /etc/passwd

#显示匹配字符串的后#行
grep -n -A 3 root /etc/passwd

#多个条件的或关系
grep -e root -e ftp /etc/passwd

基础正则表达式:
    ^     锚定行首

　　$     锚定行尾 

　　.     匹配任一一个字符

　　*     匹配零个或多个先前字符 

　　?     匹配其前面的字符0次或者1次；

　　+     匹配其前面的字符1次或者多次；

　　{m}   匹配其前面的字符m次（\为转义字符）

　　{m,n} 匹配其前面的字符至少m次，至多n次

　　()    将一个或多个字符捆绑在一起，当做一个整体进行处理，反向引用照常使用。

#　 |    或（注C|cat为C与cat，（C|c）at才是Cat与cat）

　　[]    匹配一个指定范围内的字符 | [^]匹配指定范围外的任意单个字符

　　\<或\b锚定词首，\>或\b锚定词尾（可用\<PATTERN\>匹配完整单词）

　　\(\)  将多个字符当做一个整体进行处理

　　      后向引用引用前面的分组括号中的模式所匹配到的字符

　　      分组括号中的模式匹配到的内容或被正则表达式引擎自动记录于内部的变量中

　　\1    模式从左侧起，第一个左括号及与之匹配的右括号之间模式匹配到的内容

　　\2    模式从左侧起，第二个左括号及与之匹配的右括号之间模式匹配到的内容...
