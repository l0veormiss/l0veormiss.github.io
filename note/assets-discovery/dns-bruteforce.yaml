DNS暴力破解:
# 让我们尝试使用可能的子域名来对DNS服务器进行暴力破解，以查找新的子域。
# 为此操作，您将需要一些常见的子域名字典，例如：
https://gist.github.com/jhaddix/86a06c5dc309d08580a018c66354a056
https://wordlists-cdn.assetnote.io/data/manual/best-dns-wordlist.txt
https://localdomain.pw/subdomain-bruteforce-list/all.txt.zip
https://github.com/pentester-io/commonspeak
https://github.com/danielmiessler/SecLists/tree/master/Discovery/DNS

#还需要好的DNS解析器的IP地址。为了生成可信的DNS解析器列表，您可以从
https://public-dns.info/nameservers-all.txt #下载解析器，并使用dnsvalidator进行筛选。
#或者您可以使用：
https://raw.githubusercontent.com/trickest/resolvers/main/resolvers-trusted.txt

DNS暴力破解最推荐的工具:

massdns:
#这是第一个执行有效的DNS暴力破解的工具。它非常快 但容易产生误报
sed 's/$/.domain.com/' subdomains.txt > bf-subdomains.txt
./massdns -r resolvers.txt -w /tmp/results.txt bf-subdomains.txt
grep -E "tesla.com. [0-9]+ IN A .+" /tmp/results.txt

gobuster:
# 我认为这个工具只使用了一个解析器
gobuster dns -d mysite.com -t 50 -w subdomains.txt

shuffledns:
# 是一个用Go语言编写的massdns的封装工具，它允许您使用主动暴力破解来枚举有效的子域名，
# 同时处理通配符并提供简单的输入输出支持。
shuffledns -d example.com -list example-subdomains.txt -r resolvers.txt

puredns:
# 它也使用 massdns
puredns bruteforce all.txt domain.com

aiodnsbrute:
# 使用 asyncio 异步地暴力破解域名
aiodnsbrute -r resolvers -w wordlist.txt -vv -t 1024 domain.com

######################################################################################

第二轮DNS暴力破解:
#在使用开放资源和暴力破解找到子域之后，你可以生成子域的变体，以尝试找到更多的子域。有几个工具可以用于此目的：

dnsgen:
# 根据域名和子域生成排列组合。
cat subdomains.txt | dnsgen -

goaltdns:
# 给定域名和子域名生成排列组合。
# 您可以在这里获取goaltdns的排列组合字典
goaltdns -l subdomains.txt -w /tmp/words-permutations.txt -o /tmp/final-words-s3.txt

gotator:
# 给定域名和子域名生成排列组合。如果没有指定排列组合文件，gotator将使用自己的文件
gotator -sub subdomains.txt -silent [-perm /tmp/words-permutations.txt]

altdns:
# 除了生成子域名的排列组合，它还可以尝试解析它们（但最好使用前面评论的工具）。
# 您可以在这里获取altdns的排列组合字典
altdns -i subdomains.txt -w /tmp/words-permutations.txt -o /tmp/asd3

dmut:
# 另一个用于执行子域名的排列、变异和修改的工具。该工具将对结果进行暴力破解（不支持DNS通配符）。
# 您可以在这里获取dmut的排列词表
cat subdomains.txt | dmut -d /tmp/words-permutations.txt -w 100 \
--dns-errorLimit 10 --use-pb --verbose -s /tmp/resolvers-trusted.txt

regulator:
# 有关更多信息，请阅读此文章，但基本上它会从发现的子域名中获取主要部分并将它们混合以找到更多子域名
python3 main.py adobe.com adobe adobe.rules
make_brute_list.sh adobe.rules adobe.brute
puredns resolve adobe.brute --write adobe.valid

subzuf:
# subzuf 是一个子域名暴力破解模糊器，配合一个非常简单但有效的DNS响应引导算法。它利用提供的输入数据集，
# 如定制的字典或历史DNS/TLS记录，准确地合成更多相应的域名，并根据在DNS扫描期间收集到的信息在循环中进一步
# 扩展它们。
echo www | subzuf facebook.com










